<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize instance variables
animation = 0;
built = false;
fullSize = false;

winSpeed = 1;

textSpeed = 1;

borderColor = c_maroon;
borderAlph = 1;
bWidth = 3;
/* text box */
 
bodyColor = c_gray;
bodyAlph = 1;

offset = 8;
margin = 8;
padding = 8;
xPos = UNIT_SIZE;
yPos = UNIT_SIZE;
width = 200;
height = 200;




/* text box*/
/*height = 100;
width = view_wport[0] - (offset * 2);

xPos = view_xport[0];
yPos = view_hport[0] - height - (offset * 2);
*/
/* menu */
/*width = 100;
height = view_hport[0] - (offset * 2);

xPos = view_xport[0];
yPos = view_yport[0];
*/




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (built)
{
  if(!fullSize)
  {
  if (x1 &gt; xTLFinal) x1 -= winSpeed;
  else x1 = xTLFinal;
  if (x2 &lt; xBRFinal) x2 += winSpeed;
  else x2 = xBRFinal;
  
  if (y1 &gt; yTLFinal) y1 -= winSpeed;
  else y1 = yTLFinal;
  if (y2 &lt; yBRFinal) y2 += winSpeed;
  else y2 = yBRFinal;
  
  if (x1 &lt;= xTLFinal &amp;&amp; x2 &gt;= xBRFinal &amp;&amp; 
      y1 &lt;= yTLFinal &amp;&amp; y2 &gt;= yBRFinal) fullSize = true;
  }    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///build window
show_debug_message("building window");

xTLFinal = xPos; //+ offset;
yTLFinal = yPos; //+ offset;

xBRFinal = xTLFinal + width;
yBRFinal = yTLFinal + height;

xBLFinal = xTLFinal;
yBLFinal = yBRFinal;

xTRFinal = xBRFinal;
yTRFinal = yTLFinal;


x1 = (xTLFinal + xBRFinal) / 2;
x2 = (xTLFinal + xBRFinal) / 2;


y1 = (yTLFinal + yBRFinal) / 2;
y2 = (yTLFinal + yBRFinal) / 2;




built = true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hi russel 
///calculate points

/****top left****/
if (built)
{
  xTL = x1;
  yTL = y1;
  
  xTLBorder = xTL + margin;
  yTLBorder = yTL + margin;
    
  /****Bottom Right****/
  xBR = x2;
  yBR = y2;
  /* Ha! BRB! */
  xBRBorder = xBR - margin;
  yBRBorder = yBR - margin;
  
  
  /****Bottom Left****/
  xBL = xTL;
  yBL = yBR;
  
  xBLBorder = xBL + margin;
  yBLBorder = yBL - margin;
  

  /****Top Right****/
  xTR = xBR;
  yTR = yTL;
  
  xTRBorder = xTR - margin;
  yTRBorder = yTR + margin;
  
 
  /*
  draw_circle_colour(xTL, yTL, 2, c_red, c_red, false);
  draw_circle_colour(xBR, yBR, 2, c_orange, c_orange, false);
  draw_circle_colour(xBL, yBL, 2, c_green, c_green, false);
  draw_circle_colour(xTR, yTR, 2, c_blue, c_blue, false);
  */
  /*
  draw_circle_colour(xTLBorder, yTLBorder, 2, c_red, c_red, false);
  draw_circle_colour(xBRBorder, yBRBorder, 2, c_orange, c_orange, false);
  draw_circle_colour(xBLBorder, yBLBorder, 2, c_green, c_green, false);
  draw_circle_colour(xTRBorder, yTRBorder, 2, c_blue, c_blue, false);
  */
  
  draw_circle_colour(xTLFinal, yTLFinal, 2, c_red, c_red, false);
  draw_circle_colour(xBRFinal, yBRFinal, 2, c_orange, c_orange, false);
  draw_circle_colour(xBLFinal, yBLFinal, 2, c_green, c_green, false);
  draw_circle_colour(xTRFinal, yTRFinal, 2, c_blue, c_blue, false);
  
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw box
if (built)
{
  draw_set_alpha(bodyAlph);
  draw_set_color(bodyColor);
  draw_rectangle(xTL, yTL, xBR, yBR, false);
  draw_set_alpha(borderAlph);
  draw_set_color(borderColor);
  
  //draw_rectangle(x1 + margin, y1 + margin, x2 - margin, y2 - margin, true);
  draw_line_width(xTLBorder, yTLBorder, xTRBorder, yTRBorder, bWidth);
  draw_line_width(xTRBorder, yTRBorder, xBRBorder, yBRBorder, bWidth);
  draw_line_width(xBRBorder, yBRBorder, xBLBorder, yBLBorder, bWidth);
  draw_line_width(xBLBorder, yBLBorder, xTLBorder, yTLBorder, bWidth);
  
  
  draw_set_alpha(1);
  draw_set_color(c_black);
  
   

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
